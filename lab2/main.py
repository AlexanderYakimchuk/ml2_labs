# -*- coding: utf-8 -*-
"""Lab2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TY3YjYmKZe4XYCrvuWhLUZMS2FZNIX6W
"""

import tensorflow as tf
from tensorflow.keras.datasets import cifar100
from tensorflow.keras.layers import *
from tensorflow.keras.models import *

(x_train, y_train), (x_test, y_test) = cifar100.load_data()
y_train = tf.one_hot(y_train, depth=100).numpy()
y_test = tf.one_hot(y_test, depth=100).numpy()
x_train = x_train.astype('float32')
x_test = x_test.astype('float32')

x_train = x_train / 127.5 - 1
x_test = x_test / 127.5 - 1

y_train = y_train.reshape((y_train.shape[0], y_train.shape[-1]))
y_test = y_test.reshape((y_test.shape[0], y_test.shape[-1]))

inp = Input(shape=(32, 32, 3), batch_size=64)
net = Conv2D(32, (3, 3), activation=None)(inp)
net = BatchNormalization()(net)
net = Activation('relu')(net)
net = Conv2D(64, (3, 3), activation=None)(net)
net = BatchNormalization()(net)
net = Activation('relu')(net)
net = MaxPool2D((2, 2))(net)

net = Conv2D(128, (3, 3), activation=None)(net)
net = BatchNormalization()(net)
net = Activation('relu')(net)
net = Conv2D(256, (3, 3), activation=None)(net)
net = BatchNormalization()(net)
net = Activation('relu')(net)
net = MaxPool2D((2, 2))(net)

net = Flatten()(net)

net = Dense(128, activation=None)(net)
net = BatchNormalization()(net)
net = Activation('relu')(net)
net = Dense(100, activation='softmax')(net)

model = Model([inp], [net])
model.compile(loss='categorical_crossentropy', optimizer='adam',
              metrics=['accuracy'])

model.fit(
    x_train,
    y_train,
    batch_size=64,
    steps_per_epoch=100,
    epochs=30,
    validation_data=(x_test, y_test)
)
